{"version":3,"sources":["components/MovieCard/index.js","context/SearchMoviesContext.js","components/NavBar/index.js","components/Pagination/index.js","components/Popular/index.js","components/TopRated/index.js","components/Upcoming/index.js","components/SearchQuery/index.js","App.js","index.js"],"names":["MovieCard","props","movieDetails","id","title","posterPath","voteAverage","_jsxs","className","children","_jsx","alt","src","Link","to","concat","type","SearchMoviesContext","createContext","searchResponse","onTriggerSearchingQuery","withRouter","Consumer","value","onChangeSearchInput","searchInput","onChange","event","target","placeholder","onClick","preventDefault","history","push","Pagination","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","state","pageNo","onNextPage","_this$props","apiCallback","totalPages","setState","prevState","onPrevPage","_inherits","_createClass","key","this","React","Component","Popular","isLoading","popularMovieResponse","getUpdatedData","responseData","total_pages","totalResults","total_results","results","map","eachMovie","poster_path","vote_average","getPopularMoviesResponse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","apiUrl","response","data","newData","_args","wrap","_context","prev","next","undefined","fetch","sent","json","stop","renderLoadingView","Loader","color","renderPopularMoviesList","movie","_this$state","_Fragment","NavBar","TopRated","topRatedMovieResponse","getTopRatedMoviesResponse","Upcoming","upcomingMovieResponse","getUpcomingMoviesResponse","SearchQuery","renderEmptyView","renderSearchResultViews","apiStatus","renderMoviesList","App","_useState","useState","_useState2","_slicedToArray","setSearchResponse","_useState3","_useState4","setApiStatus","_useState5","_useState6","setSearchInput","_ref","apply","Provider","text","Switch","Route","exact","path","component","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.846a1fd2.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst MovieCard = props => {\n  const {movieDetails} = props\n  const {id, title, posterPath, voteAverage} = movieDetails\n\n  return (\n    <li className=\"movie-card-container col-12 col-sm-6 col-lg-2 mb-3 d-flex flex-column\">\n      <img className=\"movie-card-image\" alt={title} src={posterPath} />\n      <div className=\"d-flex flex-column align-items-center mt-2\">\n        <h1 className=\"movie-title m-0\">{title}</h1>\n        <p className=\"movie-rating mb-0 ms-1\">Rating: {voteAverage}</p>\n      </div>\n      <Link to={`/movie/${id}`} className=\"mt-auto align-self-center\">\n        <button className=\"btn btn-outline-success\" type=\"button\">\n          View Details\n        </button>\n      </Link>\n    </li>\n  )\n}\n\nexport default MovieCard\n","import {createContext} from 'react'\n\nconst SearchMoviesContext = createContext({\n  searchResponse: {},\n  onTriggerSearchingQuery: () => {},\n})\n\nexport default SearchMoviesContext\n","import {Link, withRouter} from 'react-router-dom'\n\nimport SearchMoviesContext from '../../context/SearchMoviesContext'\n\nimport './index.css'\n\nconst NavBar = props => {\n  const renderSearchBar = () => (\n    <SearchMoviesContext.Consumer>\n      {value => {\n        const {onTriggerSearchingQuery, onChangeSearchInput, searchInput} =\n          value\n\n        const onChangeHandler = event => onChangeSearchInput(event.target.value)\n\n        const onSearchHandler = event => {\n          event.preventDefault()\n          const {history} = props\n          onTriggerSearchingQuery()\n          history.push(`/search`)\n        }\n\n        return (\n          <div className=\"d-flex align-items-center\">\n            <input\n              type=\"text\"\n              className=\"me-2 search-input\"\n              onChange={onChangeHandler}\n              value={searchInput}\n              placeholder=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-info\"\n              type=\"button\"\n              onClick={onSearchHandler}\n            >\n              Search\n            </button>\n          </div>\n        )\n      }}\n    </SearchMoviesContext.Consumer>\n  )\n\n  return (\n    <nav className=\"navbar-container d-flex align-items-center p-3\">\n      <div className=\"logo-container\">\n        <h1 className=\"page-logo\">movieDB</h1>\n      </div>\n      <div className=\"ms-auto d-flex align-items-center\">\n        <ul className=\"order-1 d-flex align-items-center p-0 mb-0 ms-3 nav-items-list\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Popular\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/top-rated\">\n              Top Rated\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/upcoming\">\n              Upcoming\n            </Link>\n          </li>\n        </ul>\n        {renderSearchBar()}\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(NavBar)\n","import React from 'react'\nimport './index.css'\n\nclass Pagination extends React.Component {\n  state = {\n    pageNo: 1,\n  }\n\n  onNextPage = () => {\n    const {apiCallback, totalPages} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo < totalPages) {\n          return {\n            pageNo: prevState.pageNo + 1,\n          }\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  onPrevPage = () => {\n    const {apiCallback} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo > 1) {\n          return {\n            pageNo: prevState.pageNo - 1,\n          }\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  render() {\n    const {pageNo} = this.state\n\n    return (\n      <div className=\"mb-3 d-flex justify-content-center align-items-center\">\n        <button type=\"button\" className=\"control-btn\" onClick={this.onPrevPage}>\n          Prev\n        </button>\n        <p className=\"page-no\">{pageNo}</p>\n        <button type=\"button\" className=\"control-btn\" onClick={this.onNextPage}>\n          Next\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport NavBar from '../NavBar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass Popular extends React.Component {\n  state = {\n    isLoading: true,\n    popularMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getPopularMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getPopularMoviesResponse = async (page = 1) => {\n    const API_KEY = '0ee694f4878e2368ee02f86ca9e1f4d5'\n    const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, popularMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {popularMovieResponse} = this.state\n    const {results} = popularMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, popularMovieResponse} = this.state\n\n    return (\n      <>\n        <NavBar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={popularMovieResponse.totalPages}\n          apiCallback={this.getPopularMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default Popular\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport NavBar from '../NavBar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass TopRated extends React.Component {\n  state = {\n    isLoading: true,\n    topRatedMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getTopRatedMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getTopRatedMoviesResponse = async (page = 1) => {\n    const API_KEY = '0ee694f4878e2368ee02f86ca9e1f4d5'\n    const apiUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, topRatedMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {topRatedMovieResponse} = this.state\n    const {results} = topRatedMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, topRatedMovieResponse} = this.state\n\n    return (\n      <>\n        {' '}\n        <NavBar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={topRatedMovieResponse.totalPages}\n          apiCallback={this.getTopRatedMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default TopRated\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport NavBar from '../NavBar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass Upcoming extends React.Component {\n  state = {\n    isLoading: true,\n    upcomingMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getUpcomingMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getUpcomingMoviesResponse = async (page = 1) => {\n    const API_KEY = '0ee694f4878e2368ee02f86ca9e1f4d5'\n    const apiUrl = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, upcomingMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {upcomingMovieResponse} = this.state\n    const {results} = upcomingMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, upcomingMovieResponse} = this.state\n\n    return (\n      <>\n        <NavBar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={upcomingMovieResponse.totalPages}\n          apiCallback={this.getUpcomingMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default Upcoming\n","import Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport NavBar from '../NavBar'\nimport Pagination from '../Pagination'\n\nimport SearchMoviesContext from '../../context/SearchMoviesContext'\n\nimport './index.css'\n\nconst SearchQuery = () => {\n  const renderEmptyView = () => (\n    <div className=\"empty-view-container\">\n      <h1>No results found.</h1>\n      <p>Don not get worried, Try to search again.</p>\n    </div>\n  )\n\n  const renderMoviesList = searchResponse => {\n    const {results} = searchResponse\n\n    if (!results.length) {\n      return renderEmptyView()\n    }\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  const renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  const renderSearchResultViews = value => {\n    const {searchResponse, apiStatus} = value\n\n    switch (apiStatus) {\n      case 'IN_PROGRESS':\n        return renderLoadingView()\n      case 'SUCCESS':\n        return renderMoviesList(searchResponse)\n      default:\n        return renderEmptyView()\n    }\n  }\n\n  return (\n    <SearchMoviesContext.Consumer>\n      {value => {\n        const {searchResponse, onTriggerSearchingQuery} = value\n\n        return (\n          <>\n            <NavBar />\n            <div className=\"route-page-body\">\n              {renderSearchResultViews(value)}\n            </div>\n            <Pagination\n              totalPages={searchResponse.totalPages}\n              apiCallback={onTriggerSearchingQuery}\n            />\n          </>\n        )\n      }}\n    </SearchMoviesContext.Consumer>\n  )\n}\n\nexport default SearchQuery\n","import {useState} from 'react'\nimport {Route, Switch} from 'react-router-dom'\n\nimport Popular from './components/Popular'\nimport TopRated from './components/TopRated'\nimport Upcoming from './components/Upcoming'\nimport SearchQuery from './components/SearchQuery'\n\nimport SearchMoviesContext from './context/SearchMoviesContext'\n\nimport './App.css'\n\nconst API_KEY = '0ee694f4878e2368ee02f86ca9e1f4d5'\n\n// write your code here\nconst App = () => {\n  const [searchResponse, setSearchResponse] = useState({})\n  const [apiStatus, setApiStatus] = useState('INITIAL')\n  const [searchInput, setSearchInput] = useState('')\n\n  const onChangeSearchInput = text => setSearchInput(text)\n\n  const getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  const onTriggerSearchingQuery = async (page = 1) => {\n    setApiStatus('IN_PROGRESS')\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchInput}&page=${page}`\n\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    setSearchResponse(getUpdatedData(data))\n    setApiStatus('SUCCESS')\n  }\n\n  return (\n    <SearchMoviesContext.Provider\n      value={{\n        searchResponse,\n        apiStatus,\n        onTriggerSearchingQuery,\n        searchInput,\n        onChangeSearchInput,\n      }}\n    >\n      <div className=\"App d-flex flex-column\">\n        <Switch>\n          <Route exact path=\"/\" component={Popular} />\n          <Route exact path=\"/top-rated\" component={TopRated} />\n          <Route exact path=\"/upcoming\" component={Upcoming} />\n          <Route exact path=\"/search\" component={SearchQuery} />\n        </Switch>\n      </div>\n    </SearchMoviesContext.Provider>\n  )\n}\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}